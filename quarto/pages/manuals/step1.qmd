---
title: "Step 1: Assign var_name to each variable"
subtitle: "Deliverable is var_name.csv "
pagetitle: "Renovation - Step 1"
execute: 
  echo: false
  warning: false
  error: false
editor_options: 
  chunk_output_type: console
---

```{r}
## Data prep
library(tidyverse)
library(reactable)
library(shiny)
library(htmltools)

load("../fair/files/quarto-f2-objects.rdata")
load("../fair/files/quarto-f3-objects.rdata")
load("../fair/files/renovation-objects.rdata")

## Reactable theming
salurbal_reactable = reactableTheme(
  color = "#5e666d",
  backgroundColor = "#e6ebee",
  borderColor = "black",
  stripedColor = "black",
  highlightColor = "bfc5c9",
  headerStyle = list(
    fontWeight = "bolder",
    fontSize = 'larger',
    borderColor = "#555"
  ),
  searchInputStyle = list(width = "98%",
                          backgroundColor = "#e6ebee",
                          margin = "auto",
                          marginTop = "3px",
                          marginBottom = "3px")
)

## Row styling 
get_row_color = function(description_tmp){
  colorTmp = case_when(
    str_detect(description_tmp,"IDENTIFIERS")~"#f4d7ad",
    str_detect(description_tmp,"STRATA DETAILS")~"#b3e9d5",
    str_detect(description_tmp,"CATEGORIZATION")~"#a3ccdf",
    str_detect(description_tmp,"INTERNAL")~"#ebd7f3",
    str_detect(description_tmp,"DETAILS")~"#c5fbc5",
    TRUE~"#e6ebee"
  )
}

## Local objects
strata_vars = c('var_name','strata_1_name','strata_1_value','strata_2_name','strata_2_value')
```
 

As per [F1]() the field `var_name` will be a unique identifier for each variable. Some rules to adhere to:

- `var_name` is a string containing only letters and numbers and does not have spaces or special characters.
- `var_name` is a variable level identifier that should not contain strata information. For example SECLABPARTM and SECLABPARTF are invalid because they indicate that the variable SECLABPART is for sex (male) and sex (female) strata; the correct var_name in this case is just SECLABPART. var_name is strictly for the variable and strata is captured in supplementary identifiers detailed in the next step.


#  Deliverable: `var_name.csv`

**`var_name.csv`is a table summarizing var_name called . It should contain two columns:**

- `var_name`
- `dataset_id`


::: {.panel-tabset}

##  Air Pollution Dataset (APS)



```{r}

htmltools::browsable(
  tagList(
    tags$button("Download var_name.csv for APS", onclick = "Reactable.downloadDataCSV('step1_aps')"),
step1_aps  %>% 
  reactable(
          elementId = "step1_aps",

    pagination = FALSE, 
    highlight = TRUE,  
    sortable = F,
    height = 500,
    defaultPageSize = 20,
    defaultColDef = colDef(minWidth = 150),
    columns = list(
      field = colDef(
        width  = 150
      )
    ),
    theme = salurbal_reactable
  )
    
  )
)

```

## SEC Census dataset (CNS) 


```{r}

htmltools::browsable(
  tagList(
    tags$button("Download var_name.csv for CNS", onclick = "Reactable.downloadDataCSV('step1_cns')"),

step1_cns   %>% 
  reactable(
              elementId = "step1_cns",
pagination = FALSE, 
    highlight = TRUE,  
    sortable = F,
    height = 500,
    defaultPageSize = 20,
    defaultColDef = colDef(minWidth = 150),
    columns = list(
      field = colDef(
        width  = 150
      )
    ),
    theme = salurbal_reactable
  )

    
  )
)
```

## Health Survey (SVY) 
 
```{r}

htmltools::browsable(
  tagList(
    tags$button("Download var_name.csv for SVY", onclick = "Reactable.downloadDataCSV('step1_svy')"),
step1_svy  %>% 
  reactable(
                  elementId = "step1_svy",
pagination = FALSE, 
    highlight = TRUE,  
    sortable = F,
    height = 500,
    defaultPageSize = 20,
    defaultColDef = colDef(minWidth = 150),
    columns = list(
      field = colDef(
        width  = 150
      )
    ),
    theme = salurbal_reactable
  )
))
```

:::
